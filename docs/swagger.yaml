definitions:
  papi.agency:
    properties:
      coletando:
        items:
          $ref: '#/definitions/papi.collecting'
        type: array
      entidade:
        description: '"J" For Judiciário, "M" for Ministério Público, "P" for Procuradorias
          and "D" for Defensorias.'
        type: string
      id_orgao:
        description: '''trt13'''
        type: string
      jurisdicao:
        description: '"R" for Regional, "M" for Municipal, "F" for Federal, "E" for
          State.'
        type: string
      nome:
        description: '''Tribunal Regional do Trabalho 13° Região'''
        type: string
      ouvidoria:
        description: Agencys's ombudsman url
        type: string
      possui_dados:
        description: If there is data from that agency
        type: boolean
      twitter_handle:
        description: Agency's twitter handle
        type: string
      uf:
        description: Short code for federative unity.
        type: string
      url:
        description: Link for state url
        type: string
    type: object
  papi.aggregateIndexes:
    properties:
      agregado:
        allOf:
        - $ref: '#/definitions/papi.score'
        description: Aggregate indices
      detalhe:
        description: All agency indices
        items:
          $ref: '#/definitions/papi.indexInformation'
        type: array
      id_orgao:
        description: e.g. 'trt13'
        type: string
    type: object
  papi.aggregateIndexesByGroup:
    properties:
      conselhos-de-justica:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      justica-do-trabalho:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      justica-eleitoral:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      justica-estadual:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      justica-federal:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      justica-militar:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      justica-superior:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
      ministerios-publicos:
        items:
          $ref: '#/definitions/papi.aggregateIndexes'
        type: array
    type: object
  papi.allAgencyInformation:
    properties:
      coletando:
        items:
          $ref: '#/definitions/papi.collecting'
        type: array
      coletas:
        items:
          $ref: '#/definitions/papi.summaryzedMI'
        type: array
      entidade:
        description: '"J" For Judiciário, "M" for Ministério Público, "P" for Procuradorias
          and "D" for Defensorias.'
        type: string
      id_orgao:
        description: '''trt13'''
        type: string
      indice_transparencia:
        $ref: '#/definitions/papi.score'
      jurisdicao:
        description: '"R" for Regional, "M" for Municipal, "F" for Federal, "E" for
          State.'
        type: string
      meses_com_dados:
        type: integer
      nome:
        description: '''Tribunal Regional do Trabalho 13° Região'''
        type: string
      ouvidoria:
        description: Agencys's ombudsman url
        type: string
      total_coletas_realizadas:
        type: integer
      twitter_handle:
        description: Agency's twitter handle
        type: string
      uf:
        description: Short code for federative unity.
        type: string
      url:
        description: Link for state url
        type: string
    type: object
  papi.backup:
    properties:
      hash:
        type: string
      size:
        type: integer
      url:
        type: string
    type: object
  papi.collect:
    properties:
      duracao_segundos:
        type: number
      repositorio_coletor:
        type: string
      repositorio_parser:
        type: string
      versao_coletor:
        type: string
      versao_parser:
        type: string
    type: object
  papi.collecting:
    properties:
      descricao:
        description: Reasons why we didn't collect the data
        items:
          type: string
        type: array
      timestamp:
        description: Day(unix) we checked the status of the data
        type: integer
    type: object
  papi.dataSummary:
    properties:
      max:
        type: number
      media:
        type: number
      min:
        type: number
      total:
        type: number
    type: object
  papi.indexInformation:
    properties:
      ano:
        type: integer
      indice_transparencia:
        $ref: '#/definitions/papi.score'
      mes:
        type: integer
      metadados:
        $ref: '#/definitions/papi.metadata'
    type: object
  papi.itemSummary:
    properties:
      auxilio_alimentacao:
        type: number
      auxilio_saude:
        type: number
      ferias:
        type: number
      gratificacao_natalina:
        type: number
      indenizacao_de_ferias:
        type: number
      licenca_compensatoria:
        type: number
      licenca_premio:
        type: number
      outras:
        description: valor agregado de outras rubricas não identificadas
        type: number
    type: object
  papi.metadata:
    properties:
      acesso:
        type: string
      dados_estritamente_tabulares:
        type: boolean
      despesas:
        type: string
      extensao:
        type: string
      formato_aberto:
        type: boolean
      manteve_consistencia_no_formato:
        type: boolean
      outras_receitas:
        type: string
      remuneracao_basica:
        type: string
      tem_cargo:
        type: boolean
      tem_lotacao:
        type: boolean
      tem_matricula:
        type: boolean
    type: object
  papi.miError:
    properties:
      cmd:
        type: string
      err_msg:
        type: string
      status:
        type: integer
    type: object
  papi.score:
    properties:
      indice_completude:
        type: number
      indice_facilidade:
        type: number
      indice_transparencia:
        type: number
    type: object
  papi.summaries:
    properties:
      membros_ativos:
        $ref: '#/definitions/papi.summary'
    type: object
  papi.summary:
    properties:
      descontos:
        $ref: '#/definitions/papi.dataSummary'
      outras_remuneracoes:
        $ref: '#/definitions/papi.dataSummary'
      quantidade:
        type: integer
      remuneracao_base:
        $ref: '#/definitions/papi.dataSummary'
      remuneracoes:
        $ref: '#/definitions/papi.dataSummary'
      resumo_rubricas:
        $ref: '#/definitions/papi.itemSummary'
    type: object
  papi.summaryzedMI:
    properties:
      ano:
        type: integer
      coleta_manual:
        type: boolean
      dados_coleta:
        $ref: '#/definitions/papi.collect'
      error:
        $ref: '#/definitions/papi.miError'
      id_orgao:
        type: string
      indice_transparencia:
        $ref: '#/definitions/papi.score'
      mes:
        type: integer
      metadados:
        $ref: '#/definitions/papi.metadata'
      pacote_de_dados:
        $ref: '#/definitions/papi.backup'
      sumarios:
        $ref: '#/definitions/papi.summaries'
    type: object
  uiapi.agency:
    properties:
      coletando:
        items:
          $ref: '#/definitions/uiapi.collecting'
        type: array
      entidade:
        description: '"J" For Judiciário, "M" for Ministério Público, "P" for Procuradorias
          and "D" for Defensorias.'
        type: string
      id_orgao:
        description: '''trt13'''
        type: string
      jurisdicao:
        description: '"R" for Regional, "M" for Municipal, "F" for Federal, "E" for
          State.'
        type: string
      nome:
        description: '''Tribunal Regional do Trabalho 13° Região'''
        type: string
      ouvidoria:
        description: Agencys's ombudsman url
        type: string
      possui_dados:
        description: If there is data from that agency
        type: boolean
      twitter_handle:
        description: Agency's twitter handle
        type: string
      uf:
        description: Short code for federative unity.
        type: string
      url:
        description: Link for state url
        type: string
    type: object
  uiapi.agencyBasic:
    properties:
      agencyCategory:
        type: string
      fullName:
        type: string
      name:
        type: string
    type: object
  uiapi.agencyRemuneration:
    properties:
      histograma:
        additionalProperties:
          type: integer
        type: object
      max_salario:
        type: number
      package:
        $ref: '#/definitions/uiapi.backup'
    type: object
  uiapi.annualSummary:
    properties:
      dados_anuais:
        items:
          $ref: '#/definitions/uiapi.annualSummaryData'
        type: array
      orgao:
        $ref: '#/definitions/uiapi.agency'
    type: object
  uiapi.annualSummaryData:
    properties:
      ano:
        type: integer
      descontos:
        type: number
      descontos_por_membro:
        type: number
      descontos_por_mes:
        type: number
      meses_com_dados:
        type: integer
      num_membros:
        type: integer
      outras_remuneracoes:
        type: number
      outras_remuneracoes_por_membro:
        type: number
      outras_remuneracoes_por_mes:
        type: number
      package:
        $ref: '#/definitions/uiapi.backup'
      remuneracao_base:
        type: number
      remuneracao_base_por_membro:
        type: number
      remuneracao_base_por_mes:
        type: number
      remuneracoes:
        type: number
      remuneracoes_por_membro:
        type: number
      remuneracoes_por_mes:
        type: number
      resumo_rubricas:
        $ref: '#/definitions/uiapi.itemSummary'
    type: object
  uiapi.backup:
    properties:
      hash:
        type: string
      size:
        type: integer
      url:
        type: string
    type: object
  uiapi.collecting:
    properties:
      descricao:
        description: Reasons why we didn't collect the data
        items:
          type: string
        type: array
      timestamp:
        description: Day(unix) we checked the status of the data
        type: integer
    type: object
  uiapi.generalSummary:
    properties:
      data_fim:
        type: string
      data_inicio:
        type: string
      num_meses_coletados:
        type: integer
      num_orgaos:
        type: integer
      remuneracao_total:
        type: number
    type: object
  uiapi.itemSummary:
    properties:
      auxilio_alimentacao:
        type: number
      auxilio_saude:
        type: number
      ferias:
        type: number
      gratificacao_natalina:
        type: number
      indenizacao_de_ferias:
        type: number
      licenca_compensatoria:
        type: number
      licenca_premio:
        type: number
      outras:
        description: valor agregado de outras rubricas não identificadas
        type: number
    type: object
  uiapi.mensalRemuneration:
    properties:
      descontos:
        type: number
      mes:
        type: integer
      num_membros:
        type: integer
      outras_remuneracoes:
        type: number
      remuneracao_base:
        type: number
      remuneracoes:
        type: number
      resumo_rubricas:
        $ref: '#/definitions/uiapi.itemSummary'
    type: object
  uiapi.perCapitaData:
    properties:
      descontos:
        type: number
      outras_remuneracoes:
        type: number
      remuneracao_base:
        type: number
      remuneracoes:
        type: number
    type: object
  uiapi.procError:
    properties:
      stderr:
        description: String containing the standard error of the process.
        type: string
      stdout:
        description: String containing the standard output of the process.
        type: string
    type: object
  uiapi.procInfo:
    properties:
      cmd:
        type: string
      cmd_dir:
        type: string
      env:
        items:
          type: string
        type: array
      status:
        type: integer
      stderr:
        type: string
      stdin:
        type: string
      stdout:
        type: string
    type: object
  uiapi.searchResponse:
    properties:
      download_available:
        type: boolean
      download_limit:
        type: integer
      num_rows_if_available:
        type: integer
      result:
        items:
          $ref: '#/definitions/uiapi.searchResult'
        type: array
      search_limit:
        type: integer
    type: object
  uiapi.searchResult:
    properties:
      ano:
        type: integer
      cargo:
        type: string
      categoria_contracheque:
        type: string
      detalhamento_contracheque:
        type: string
      lotacao:
        type: string
      matricula:
        type: string
      mes:
        type: integer
      nome:
        type: string
      orgao:
        type: string
      valor:
        type: string
    type: object
  uiapi.state:
    properties:
      agency:
        items:
          $ref: '#/definitions/uiapi.agencyBasic'
        type: array
      flagURL:
        type: string
      name:
        type: string
      shortName:
        type: string
    type: object
  uiapi.timestamp:
    properties:
      nanos:
        type: integer
      seconds:
        type: integer
    type: object
  uiapi.v2AgencySummary:
    properties:
      descontos:
        type: number
      max_descontos:
        type: number
      max_outras_remuneracoes:
        type: number
      max_remuneracao:
        type: number
      max_remuneracao_base:
        type: number
      orgao:
        type: string
      outras_remuneracoes:
        type: number
      remuneracao_base:
        type: number
      resumo_rubricas:
        $ref: '#/definitions/uiapi.itemSummary'
      tem_anterior:
        type: boolean
      tem_proximo:
        type: boolean
      timestamp:
        $ref: '#/definitions/uiapi.timestamp'
      total_membros:
        type: integer
      total_remuneracao:
        type: number
    type: object
  uiapi.v2AgencyTotalsYear:
    properties:
      ano:
        type: integer
      media_por_membro:
        $ref: '#/definitions/uiapi.perCapitaData'
      meses:
        items:
          $ref: '#/definitions/uiapi.v2MonthTotals'
        type: array
      orgao:
        $ref: '#/definitions/uiapi.agency'
      package:
        $ref: '#/definitions/uiapi.backup'
    type: object
  uiapi.v2MonthTotals:
    properties:
      descontos:
        type: number
      descontos_por_membro:
        type: number
      error:
        $ref: '#/definitions/uiapi.procError'
      mes:
        type: integer
      outras_remuneracoes:
        type: number
      outras_remuneracoes_por_membro:
        type: number
      remuneracao_base:
        type: number
      remuneracao_base_por_membro:
        type: number
      remuneracoes:
        type: number
      remuneracoes_por_membro:
        type: number
      resumo_rubricas:
        $ref: '#/definitions/uiapi.itemSummary'
      timestamp:
        $ref: '#/definitions/uiapi.timestamp'
      total_membros:
        type: integer
    type: object
  uiapi.v2ProcInfoResult:
    properties:
      proc_info:
        $ref: '#/definitions/uiapi.procInfo'
      timestamp:
        $ref: '#/definitions/uiapi.timestamp'
    type: object
info:
  contact:
    name: DadosJusBr
    url: https://dadosjusbr.org
  title: API do dadosjusbr.org
  version: "1.0"
paths:
  /uiapi/v1/orgao/resumo/{orgao}:
    get:
      description: Retorna os dados anuais de um orgão
      operationId: GetAnnualSummary
      parameters:
      - description: Nome do orgão
        in: path
        name: orgao
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            items:
              $ref: '#/definitions/uiapi.annualSummary'
            type: array
        "400":
          description: Parâmetro orgao inválido
          schema:
            type: string
        "500":
          description: Algo deu errado ao tentar coletar os dados anuais do orgao
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/download:
    get:
      description: Baixa dados referentes a remunerações a partir de filtros
      operationId: DownloadByUrl
      parameters:
      - description: 'Anos a serem pesquisados, separados por virgula. Exemplo: 2018,2019,2020'
        in: query
        name: anos
        type: string
      - description: 'Meses a serem pesquisados, separados por virgula. Exemplo: 1,2,3'
        in: query
        name: meses
        type: string
      - description: 'Orgãos a serem pesquisados, separados por virgula. Exemplo:
          tjal,mpal,mppb'
        in: query
        name: orgaos
        type: string
      - description: Categorias a serem pesquisadas
        enum:
        - base
        - outras
        - descontos
        in: query
        name: categorias
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Arquivo CSV com os dados.
          schema:
            type: file
        "400":
          description: Erro de validação dos parâmetros.
          schema:
            type: string
        "500":
          description: Erro interno do servidor.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/geral/remuneracao/{ano}:
    get:
      description: Busca os dados, das remunerações de um ano inteiro, agrupados por
        mês.
      operationId: GetGeneralRemunerationFromYear
      parameters:
      - description: 'Ano da remuneração. Exemplos: 2018, 2019, 2020...'
        in: path
        name: ano
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            items:
              $ref: '#/definitions/uiapi.mensalRemuneration'
            type: array
        "400":
          description: Parâmetro ano inválido.
          schema:
            type: string
        "500":
          description: Erro interno.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/geral/resumo:
    get:
      description: Busca e resume os dados das remunerações de todos os anos
      operationId: GetGeneralSummary
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/uiapi.generalSummary'
        "500":
          description: Erro interno do servidor.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/orgao/{grupo}:
    get:
      description: Busca os órgãos de um determinado grupo.
      operationId: GetBasicInfoOfType
      parameters:
      - description: Grupo de órgãos
        enum:
        - justica-eleitoral
        - ministerios-publicos
        - justica-estadual
        - justica-do-trabalho
        - justica-federal
        - justica-militar
        - justica-superior
        - conselhos-de-justica
        - AC
        - AL
        - AP
        - AM
        - BA
        - CE
        - DF
        - ES
        - GO
        - MA
        - MT
        - MS
        - MG
        - PA
        - PB
        - PR
        - PE
        - PI
        - RJ
        - RN
        - RS
        - RO
        - RR
        - SC
        - SP
        - SE
        - TO
        in: path
        name: grupo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Órgãos do grupo
          schema:
            $ref: '#/definitions/uiapi.state'
        "400":
          description: Parâmetro inválido
          schema:
            type: string
        "404":
          description: Grupo não encontrado
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/orgao/resumo/{orgao}/{ano}/{mes}:
    get:
      description: Resume os dados de remuneração mensal de um órgão.
      operationId: GetSummaryOfAgency
      parameters:
      - description: 'ID do órgão. Exemplos: tjal, tjba, mppb.'
        in: path
        name: orgao
        required: true
        type: string
      - description: 'Ano da remuneração. Exemplo: 2018.'
        in: path
        name: ano
        required: true
        type: integer
      - description: 'Mês da remuneração. Exemplo: 1.'
        in: path
        name: mes
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/uiapi.v2AgencySummary'
        "400":
          description: Parâmetro ano, mês ou nome do órgão são inválidos.
          schema:
            type: string
        "404":
          description: Órgão não encontrado.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/orgao/salario/{orgao}/{ano}/{mes}:
    get:
      description: Busca dados das remunerações mensais de um órgão.
      operationId: GetSalaryOfAgencyMonthYear
      parameters:
      - description: 'ID do órgão. Exemplos: tjal, tjba, mppb.'
        in: path
        name: orgao
        required: true
        type: string
      - description: 'Mês da remuneração. Exemplos: 01, 02, 03...'
        in: path
        name: mes
        required: true
        type: string
      - description: 'Ano da remuneração. Exemplos: 2018, 2019, 2020...'
        in: path
        name: ano
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/uiapi.agencyRemuneration'
        "206":
          description: Requisição bem sucedida, mas os dados do órgão não foram bem
            processados
          schema:
            $ref: '#/definitions/uiapi.v2ProcInfoResult'
        "400":
          description: Parâmetros inválidos.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/orgao/totais/{orgao}/{ano}:
    get:
      description: Busca os dados de remuneração de um órgão em um ano específico.
      operationId: GetTotalsOfAgencyYear
      parameters:
      - description: 'ID do órgão. Exemplos: tjal, tjba, mppb.'
        in: path
        name: orgao
        required: true
        type: string
      - description: 'Ano. Exemplo: 2018.'
        in: path
        name: ano
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/uiapi.v2AgencyTotalsYear'
        "400":
          description: Parâmetro ano ou orgao inválido.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/pesquisar:
    get:
      description: Faz uma busca por remunerações a partir de filtros
      operationId: SearchByUrl
      parameters:
      - description: 'Anos a serem pesquisados, separados por virgula. Exemplo: 2018,2019,2020'
        in: query
        name: anos
        type: string
      - description: 'Meses a serem pesquisados, separados por virgula. Exemplo: 1,2,3'
        in: query
        name: meses
        type: string
      - description: 'Orgãos a serem pesquisados, separados por virgula. Exemplo:
          tjal,mpal,mppb'
        in: query
        name: orgaos
        type: string
      - description: Categorias a serem pesquisadas
        enum:
        - base
        - outras
        - descontos
        in: query
        name: categorias
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/uiapi.searchResponse'
        "400":
          description: Erro de validação dos parâmetros.
          schema:
            type: string
        "500":
          description: Erro interno do servidor.
          schema:
            type: string
      tags:
      - ui_api
  /uiapi/v2/readme:
    get:
      description: Retorna um README sobre o pacote de dados
      operationId: DownloadReadme
      parameters:
      - description: Ano a ser filtrado
        in: query
        name: ano
        type: string
      - description: Mês a ser filtrado
        in: query
        name: mes
        type: string
      - description: Orgão a ser filtrado
        in: query
        name: orgao
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Parâmetro ano/mês inválido
          schema:
            type: string
        "500":
          description: Algo deu errado ao retornar o README
          schema:
            type: string
      tags:
      - ui_api
  /v2/dados/{orgao}:
    get:
      description: Busca todas as informações de um órgão específico.
      operationId: GetAllAgencyInformation
      parameters:
      - description: órgão
        in: path
        name: orgao
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/papi.allAgencyInformation'
        "400":
          description: Requisição inválida.
          schema:
            type: string
      tags:
      - public_api
  /v2/dados/{orgao}/{ano}:
    get:
      description: Busca os dados mensais de um órgão por ano
      operationId: GetMonthlyInfosByYear
      parameters:
      - description: Ano
        in: path
        name: ano
        required: true
        type: integer
      - description: Órgão
        in: path
        name: orgao
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida
          schema:
            items:
              $ref: '#/definitions/papi.summaryzedMI'
            type: array
        "400":
          description: Parâmetros inválidos
          schema:
            type: string
        "404":
          description: Não existem dados para os parâmetros informados
          schema:
            type: string
      tags:
      - public_api
  /v2/dados/{orgao}/{ano}/{mes}:
    get:
      description: Busca um dado mensal de um órgão
      operationId: GetMonthlyInfo
      parameters:
      - description: Ano
        in: path
        name: ano
        required: true
        type: integer
      - description: Órgão
        in: path
        name: orgao
        required: true
        type: string
      - description: Mês
        in: path
        name: mes
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida
          schema:
            $ref: '#/definitions/papi.summaryzedMI'
        "400":
          description: Parâmetros inválidos
          schema:
            type: string
        "404":
          description: Não existem dados para os parâmetros informados
          schema:
            type: string
      tags:
      - public_api
  /v2/indice:
    get:
      description: Busca as informações de índices de todos os órgãos.
      operationId: GetAggregateIndexes
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            items:
              $ref: '#/definitions/papi.aggregateIndexesByGroup'
            type: array
        "500":
          description: Erro interno do servidor.
          schema:
            type: string
      tags:
      - public_api
  /v2/indice/{param}/{valor}:
    get:
      description: Busca as informações de índices de um grupo ou órgão específico.
      operationId: GetAggregateIndexesWithParams
      parameters:
      - description: '''grupo'' ou ''orgao'''
        in: path
        name: param
        required: true
        type: string
      - description: Jurisdição ou ID do órgao
        in: path
        name: valor
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            items:
              $ref: '#/definitions/papi.aggregateIndexes'
            type: array
        "400":
          description: Requisição inválida.
          schema:
            type: string
        "500":
          description: Erro interno do servidor.
          schema:
            type: string
      tags:
      - public_api
  /v2/orgao/{orgao}:
    get:
      description: Busca um órgão específico utilizando seu ID.
      operationId: GetAgencyById
      parameters:
      - description: 'ID do órgão. Exemplos: tjal, tjba, mppb.'
        in: path
        name: orgao
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            $ref: '#/definitions/papi.agency'
        "404":
          description: Órgão não encontrado.
          schema:
            type: string
      tags:
      - public_api
  /v2/orgaos:
    get:
      description: Busca todos os órgãos disponíveis.
      operationId: GetAllAgencies
      produces:
      - application/json
      responses:
        "200":
          description: Requisição bem sucedida.
          schema:
            items:
              $ref: '#/definitions/papi.agency'
            type: array
        "500":
          description: Erro interno do servidor.
          schema:
            type: string
      tags:
      - public_api
swagger: "2.0"
